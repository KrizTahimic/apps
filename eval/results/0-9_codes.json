{"0": "import sys\n\ns = sys.stdin.readline().strip()\n\nif not s:\n    sys.stdout.write(\"-1\\n\")\n    sys.exit(0)\n\nans = 0\nfor i in range(len(s)):\n    if s[i] == '[' or s[i] == ']' or s[i] == ':' or s[i] == '|':\n        ans = max(ans, i + 1)\n\nsys.stdout.write(str(ans) + '\\n')\n", "1": "import math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the maximumSumOfDigits function below.\ndef maximumSumOfDigits(x):\n    sum = 0\n    for i in str(x):\n        sum += int(i)\n    return sum\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    t = int(input().strip())\n\n    for t_itr in range(t):\n        x = int(input().strip())\n\n        result = maximumSumOfDigits(x)\n\n        fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "2": "import math\nimport os\nimport random\nimport re\nimport sys\n\n#\n# Complete the 'luckyYear' function below.\n#\n# The function is expected to return an INTEGER.\n# The function accepts INTEGER n as parameter.\n#\n\ndef luckyYear(n):\n    # Write your code here\n    return math.floor(math.log10(n))\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    t = int(input().strip())\n\n    for t_itr in range(t):\n        n = int(input().strip())\n\n        result = luckyYear(n)\n\n        fptr.write(str(result) + '\\n')\n\n    fptr.close()\n\nif __name__ == '__main__':\n    t = int(input().strip())\n\n    for t_itr in range(t):\n        n = int(input().strip())\n\n        result = luckyYear(n)\n\n        fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "3": "n = int(input())\nq = int(input())\nl = []\nr = []\nfor i in range(q):\n    l.append(int(input()))\n    r.append(int(input()))\nl.sort()\nr.sort()\nans = 0\nfor i in range(1, n):\n    if l[0] <= i <= r[0]:\n        ans += 1\n    if l[1] <= i <= r[1]:\n        ans += 1\n    if l[2] <= i <= r[2]:\n        ans += 1\n    if l[3] <= i <= r[3]:\n        ans += 1\nprint(ans)", "4": "import math\nimport os\nimport random\nimport re\nimport sys\n\n#\n# Complete the 'timeConversion' function below.\n#\n# The function is expected to return a STRING.\n# The function accepts STRING s as parameter.\n#\n\ndef timeConversion(s):\n    # Write your code here\n    if s[-2:] == 'AM':\n        return s[:-2] + '00'\n    elif s[-2:] == 'PM':\n        return s[:-2] + '12'\n    else:\n        return s\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    t = int(input().strip())\n\n    for t_itr in range(t):\n        s = input()\n\n        result = timeConversion(s)\n\n        fptr.write(result + '\\n')\n\n    fptr.close()\n", "5": "import sys\n\nn = int(sys.stdin.readline())\npos = int(sys.stdin.readline())\nl = int(sys.stdin.readline())\nr = int(sys.stdin.readline())\n\nif pos < l or pos > r:\n    print(0)\n    sys.exit(0)\n\nif pos == l or pos == r:\n    print(0)\n    sys.exit(0)\n\nif l == r:\n    print(0)\n    sys.exit(0)\n\nif pos == l + 1:\n    print(1)\n    sys.exit(0)\n\nif pos == l + 2:\n    print(2)\n    sys.exit(0)\n\nif pos == l + 3:\n    print(3)\n    sys.exit(0)\n\nif pos == l + 4:\n    print(4)\n    sys.exit(0)\n\nif pos == l + 5:\n    print(5)\n    sys.exit(0)\n\nif pos == l + 6:\n    print(6)\n    sys.exit(0)\n\nif pos == l + 7:\n    print(7)\n    sys.exit(0)\n\nif pos == l + 8:\n    print(8)\n    sys.exit(0)\n\nif pos == l + 9:\n    print(9)\n    sys.exit(0)\n\nif pos == l + 10:\n    print(10)\n    sys.exit(0)\n\nif pos == l + 11:\n    print(11)\n    sys.exit(0)\n\nif pos == l + 12:\n    print(12)\n    sys.exit(0)\n\nif pos == l + 13:\n    print(13)\n    sys.exit(0)\n\nprint(14)\n", "6": "n, x = map(int, input().split())\nd = [int(i) for i in input().split()]\nh = [int(i) for i in input().split()]\ncurX = x\n\nfor i in range(n):\n    if curX >= d[i]:\n        curX -= min(d[i], curX)\n        curX += h[i]\n    else:\n        break\n\nif curX == 0:\n    print(-1)\nelse:\n    print(curX)", "7": "n = int(input())\nm = int(input())\nday = 1\nwhile True:\n    if n == 0:\n        break\n    if m > n:\n        m = m - n\n        n = 0\n    else:\n        n = n - m\n        m = 0\n    day = day + 1\nprint(day)\n", "8": "import math\nimport os\nimport random\nimport re\nimport sys\n\n#\n# Complete the 'solve' function below.\n#\n# The function is expected to return an INTEGER.\n# The function accepts following parameters:\n#  1. STRING s1\n#  2. STRING s2\n#  3. STRING s3\n#\n\ndef solve(s1, s2, s3):\n    # Write your code here\n    return 0\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    s1 = input()\n\n    s2 = input()\n\n    s3"}